version: "3.9"

services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile
    command: poetry run uvicorn app.api.main:app --host 0.0.0.0 --port 8000
    env_file:
      - ../.env.example
    environment:
      APP_ENV: prod
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/whatsinvoice
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: whatsinvoice
      S3_PRESIGN_TTL: 3600
      WHATSAPP_API_KEY: dev-whatsapp-key
      PAYSTACK_SECRET: dev-paystack-secret
      FLUTTERWAVE_SECRET: dev-flutterwave-secret
      JWT_SECRET: change_me
      LOG_FORMAT: json
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - app-storage:/app/storage

  worker:
    build:
      context: ..
      dockerfile: Dockerfile
    command: poetry run celery-worker
    env_file:
      - ../.env.example
    environment:
      APP_ENV: prod
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/whatsinvoice
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: whatsinvoice
      S3_PRESIGN_TTL: 3600
      WHATSAPP_API_KEY: dev-whatsapp-key
      PAYSTACK_SECRET: dev-paystack-secret
      FLUTTERWAVE_SECRET: dev-flutterwave-secret
      JWT_SECRET: change_me
      LOG_FORMAT: json
      LOG_LEVEL: INFO
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - app-storage:/app/storage

  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: whatsinvoice
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  prometheus:
    image: prom/prometheus:v2.54.1
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api

volumes:
  app-storage:
  postgres-data:
  minio-data:
